{"version":3,"sources":["images/logo.svg","images/profile_image.jpg","components/Header.js","components/Api.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logoPath","alt","api","baseUrl","authToken","this","_baseUrl","_authToken","method","route","body","fetch","headers","JSON","stringify","then","res","ok","json","Promise","reject","status","_sendRequest","name","about","link","cardId","Card","props","key","card","_id","onClick","onCardClick","type","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","avatarPath","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","data","avatar","catch","err","console","log","getInitialCards","onEditAvatar","onEditProfile","onAddPlace","map","PopupWithForm","isOpen","height","action","padding","paddingSize","title","children","buttonText","onClose","ImagePopup","Footer","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","id","minLength","maxLength","pattern","placeholder","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2d360eb3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile_image.183d8bca.jpg\";","import React from 'react';\r\nimport logoPath from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={logoPath} alt=\"Логотип проекта\" />\r\n        </header>\r\n    );\r\n  }\r\n  \r\n  export default Header;\r\n  ","class Api {\n  constructor({ baseUrl, authToken }) {\n    this._baseUrl = baseUrl;\n    this._authToken = authToken;\n  }\n\n  _sendRequest(method, route, body) {\n    return fetch(this._baseUrl + route, {\n      method: method,\n      headers: {\n        'Authorization': this._authToken,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  getUserInfo() {\n    return this._sendRequest('GET', '/users/me');\n  }\n\n  setUserInfo(name, about) {\n    return this._sendRequest('PATCH', '/users/me', { name, about });\n  }\n\n  getInitialCards() {\n    return this._sendRequest('GET', '/cards');\n  }\n\n  createCard(name, link) {\n    return this._sendRequest('POST', '/cards', { name, link });\n  }\n\n  deleteCard(cardId) {\n    return this._sendRequest('DELETE', `/cards/${cardId}`);\n  }\n\n  likeCard(cardId) {\n    return this._sendRequest('PUT', `/cards/likes/${cardId}`);\n  }\n\n  unlikeCard(cardId) {\n    return this._sendRequest('DELETE', `/cards/likes/${cardId}`);\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n  authToken: '4ae18a0d-219b-4b69-acec-20d1c5775e6d',\n});\n\nexport default api\n","import React from 'react';\n\nfunction Card(props) {\n  function handleClick() {\n    props.onCardClick(props.card.name, props.card.link);\n  }\n\n  return (\n    <article className=\"gallery-card\" key={props.card._id}>\n      <img className=\"gallery-card__picture\" src={props.card.link} alt={props.card.name} onClick={handleClick}/>\n      <button className=\"button button_delete\"></button>\n      <div className=\"gallery-card__description\">\n        <h2 className=\"gallery-card__title\">{props.card.name}</h2>\n        <div className=\"gallery-card_like\">\n          <button className=\"button button_like\" type=\"button\"></button>\n          <span className=\"button_like-counter\">{props.card.likes.length}</span>\n        </div>\n      </div>\n    </article>\n  );\n}\n\nexport default Card;\n\n\n","import React from 'react';\nimport avatarPath from '../images/profile_image.jpg';\nimport api from './Api';\nimport Card from './Card';\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState('Жак Ив Кусто');\n  const [userDescription, setUserDescription] = React.useState('Исследователь океана');\n  const [userAvatar, setUserAvatar] = React.useState(avatarPath);\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api.getUserInfo()\n    .then((data) => {\n      setUserName(data.name);\n      setUserDescription(data.about);\n      setUserAvatar(data.avatar);\n    })\n    .catch((err) => console.log(err))\n\n    api.getInitialCards()\n    .then((data) => {\n      setCards(data)\n    })\n    .catch((err) => console.log(err))\n  }, [])\n\n\n  return (\n    <main className=\"page\">\n      <section className=\"profile\">\n        <div className=\"profile__container\">\n          <img className=\"profile__picture\" src={userAvatar} alt=\"Фото профиля\" name=\"avatar\" />\n          <div className=\"profile__picture_edit\" onClick={props.onEditAvatar}></div>\n          <div className=\"profile__info\">\n            <div className=\"profile__edit\">\n              <h1 className=\"profile__name\">{userName}</h1>\n              <button className=\"button button_edit\" name=\"button_edit\" type=\"button\" onClick={props.onEditProfile}></button>\n            </div>\n            <p className=\"profile__job\">{userDescription}</p>\n          </div>\n        </div>\n          <button className=\"button button_add\" name=\"button_add\" type=\"button\" onClick={props.onAddPlace}></button>\n      </section>\n\n      {<section className=\"gallery\">\n      {cards.map((card) => <Card key={card._id} card={card} onCardClick={props.onCardClick}/>\n      )}\n      </section>}\n\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <div className={(props.isOpen ? `popup popup_opacity-normal ${props.name} popup_opened` : `popup popup_opacity-normal ${props.name}`)}>\n      <div className=\"popup__container\">\n        <form className={`popup__form ${props.height}`} name={props.name} method='post' action=\"#\">\n          <h2 className={`popup__title ${props.padding} ${props.paddingSize}`}>{props.title}</h2>\n          {props.children}\n          <button className=\"popup__button button button_submit\" type=\"submit\">{props.buttonText}</button>\n        </form>\n          <button className=\"button button_close popup-change__close\" type=\"button\" onClick={props.onClose}></button>\n      </div>\n     </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ImagePopup(props) {\n  return (\n    <div className={(props.card.isOpen ? `popup popup_opacity popup-card popup_opened` : `popup popup_opacity popup-card`)}>\n        <div className=\"popup__container\">\n          <figure className=\"popup__frame\">\n            <img className=\"popup__image\" alt={props.card.name} src={props.card.link}/>\n            <figcaption className=\"popup__caption\">{props.card.name}</figcaption>\n          </figure>\n          <button className=\"button button_close popup-card__close\" type=\"button\" onClick={props.onClose}></button>\n        </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n          <p className=\"footer__copyright\">&copy; 2020 Ющенко Юлия</p>\r\n        </footer>\r\n    );\r\n  }\r\n  \r\n  export default Footer;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport Footer from './Footer';\n\n\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    isOpen: false,\n    name: '',\n    link: ''\n  });\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(name, link) {\n    setSelectedCard({\n      isOpen: true,\n      name: name,\n      link: link});\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({\n      isOpen: false,\n      name: '',\n      link: '' });\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main onEditAvatar={handleEditAvatarClick} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onCardClick={handleCardClick}/>\n      <PopupWithForm name='popup-delete' title='Вы уверены?' height='popup__form_height-small' paddingSize='popup__form_height-small' buttonText='Да' />\n      <PopupWithForm name='popup-edit' title='Редактировать профиль' buttonText='Сохранить' isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\n          children={\n              <>\n                  <input className=\"popup__input popup__input_name\" id=\"name-input\" type=\"text\" name=\"name\" minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-zА-ЯЁа-яё -]{1,}\" placeholder=\"Имя\" required />\n                  <span className=\"popup__input-error\" id=\"name-input-error\"></span>\n                  <input className=\"popup__input popup__input_job\" id=\"job-input\" type=\"text\" name=\"job\" minLength=\"2\" maxLength=\"200\" placeholder=\"О себе\" required />\n                  <span className=\"popup__input-error\" id=\"job-input-error\"></span>\n              </>\n          } />\n      <PopupWithForm name='popup-change' title='Обновить аватар' height='popup__form_height-medium' padding=\"popup__title_padding\" buttonText='Сохранить' isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\n          children={\n              <>\n                  <input className=\"popup__input popup__input_link\" id=\"url-input\" type=\"url\" name=\"link\" placeholder=\"Ссылка на аватар\" required />\n                  <span className=\"popup__input-error\" id=\"url-input-error\"></span>\n              </>\n      } />\n      <PopupWithForm name='popup-add' title='Новое место' padding=\"popup__title_padding\" buttonText='Создать' isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\n          children={\n              <>\n                  <input className=\"popup__input popup__input_title\" id=\"title-input\" type=\"text\" name=\"title\" placeholder=\"Название\" minLength=\"1\" maxLength=\"30\"required/>\n                  <span className=\"popup__input-error\" id=\"title-input-error\"></span>\n                  <input className=\"popup__input popup__input_path\" id=\"url-input\" type=\"url\" name=\"path\" placeholder=\"Ссылка на картинку\" required />\n                  <span className=\"popup__input-error\" id=\"url-input-error\"></span>\n              </>\n          } />\n      <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}